#!/bin/bash
services=()
ctrl_type=$(echo $(basename $0) | awk -F- '{print $2}')

find_obfs_service()
{
    if [ -e /etc/simple-obfs ]; then
        for obfsconf in $(find /etc/simple-obfs -type f)
        do
            services+=(obfs@$(basename ${obfsconf} .conf).service)
        done
    fi
}

find_kcp_service()
{
    if [ -e /etc/kcptun ]; then
        for kcpconf in $(find /etc/kcptun -type f -name "*.conf")
        do
            services+=(kcptun-server@$(basename ${kcpconf} .conf).service)
        done
    fi
}

find_ss_service()
{
    if [ -e /etc/shadowsocks-libev ]; then
        for ssconf in $(find /etc/shadowsocks-libev -type f -name "*.json")
        do
            services+=(ss@$(echo $(basename ${ssconf} .json) | awk -F- '{print $2}').service)
        done
    fi
}

find_tunnel_service()
{
    for tnconf in $(find /etc/shadowsocks-libev -name "tunnel-*")
    do
        services+=(ss-tunnel@$(echo $(basename ${tnconf} .json) | awk -F- '{print $2}').service)
    done
}

service_ctrl()
{
    systemctl $1 ${services[@]}
}

case ${ctrl_type} in
    all)
        find_obfs_service
        find_kcp_service
        find_ss_service
        find_tunnel_service
    ;;
    kcp)
        find_kcp_service
    ;;
    ss)
        find_ss_service
    ;;
    obfs)
        find_obfs_service
    ;;
    tunnel|tn)
        find_tunnel_service
    ;;
    *)
        echo "No such function: ${ctrl_type}!"
    ;;
esac

case $1 in
    start)
        service_ctrl start
        service_ctrl "status -l"
    ;;
    stop)
        service_ctrl stop
        service_ctrl "status -l"
    ;;
    restart)
        service_ctrl restart
        service_ctrl "status -l"
    ;;
    status)
        service_ctrl "status -l"
    ;;
    *)
        service_ctrl "status -l"
    ;;
esac
